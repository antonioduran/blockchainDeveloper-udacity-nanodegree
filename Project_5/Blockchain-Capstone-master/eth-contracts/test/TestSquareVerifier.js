// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
const verifier = artifacts.require('Verifier')
const { proof, inputs } = require('../../zokrates/code/square/proof')

contract('Verifier', accounts => {
    const owner = accounts[0];

    // Test verification with correct proof
    // - use the contents from proof.json generated from zokrates steps
    describe("Test vertification", function () {
        beforeEach(async function () {
            this.contract = await verifier.new({from: owner})
        })

        it ("can verify with correct proofs", async function () {
            let result = await this.contract.verifyTx(proof, inputs);
                assert.equal(result, true, "Should verifiy with correct proof");
        })

        // Test verification with incorrect proof
        it("will fail if incorrect parameters are given", async function () {
            let result = await this.contract.verifyTx(proof, [10, 1]);
            assert.equal(result, false, "Verification with incorrect proof should fail");
        })
    });
})

